name: Update SourceGit Develop Formula

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: "0 2 * * *"
  workflow_dispatch: # Allow manual trigger

jobs:
  update-formula:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"

      - name: Get latest commit from SourceGit develop branch
        id: get-commit
        run: |
          # Get the latest commit hash from the develop branch
          LATEST_COMMIT=$(curl -s https://api.github.com/repos/sourcegit-scm/sourcegit/commits/develop | jq -r '.sha')
          echo "latest_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT
          echo "Latest commit: $LATEST_COMMIT"

          # Get short commit hash (first 7 characters)
          SHORT_COMMIT=${LATEST_COMMIT:0:7}
          echo "short_commit=$SHORT_COMMIT" >> $GITHUB_OUTPUT
          echo "Short commit: $SHORT_COMMIT"

          # Get commit date for version
          COMMIT_DATE=$(curl -s https://api.github.com/repos/sourcegit-scm/sourcegit/commits/develop | jq -r '.commit.committer.date' | cut -d'T' -f1 | tr -d '-')
          echo "commit_date=$COMMIT_DATE" >> $GITHUB_OUTPUT
          echo "Commit date: $COMMIT_DATE"

      - name: Check if formula needs update
        id: check-update
        run: |
          # Get current commit hash from formula
          CURRENT_COMMIT=$(grep -o "commit_hash = '[^']*'" Formula/sourcegit-develop.rb | sed "s/commit_hash = '//; s/'//")
          echo "Current commit in formula: $CURRENT_COMMIT"
          echo "current_commit=$CURRENT_COMMIT" >> $GITHUB_OUTPUT

          # Compare commits
          if [ "$CURRENT_COMMIT" != "${{ steps.get-commit.outputs.latest_commit }}" ] && [ "$CURRENT_COMMIT" != "${{ steps.get-commit.outputs.short_commit }}" ]; then
            echo "needs_update=true" >> $GITHUB_OUTPUT
            echo "Formula needs update"
          else
            echo "needs_update=false" >> $GITHUB_OUTPUT
            echo "Formula is up to date"
          fi

      - name: Update formula
        if: steps.check-update.outputs.needs_update == 'true'
        run: |
          # Update the commit hash in the formula
          sed -i "s/commit_hash = '[^']*'/commit_hash = '${{ steps.get-commit.outputs.short_commit }}'/" Formula/sourcegit-develop.rb

          # Update version with date and short commit
          NEW_VERSION="${{ steps.get-commit.outputs.commit_date }}-${{ steps.get-commit.outputs.short_commit }}"
          sed -i "s/version '[^']*'/version '$NEW_VERSION'/" Formula/sourcegit-develop.rb

          echo "Updated version to: $NEW_VERSION"

      - name: Validate updated formula
        if: steps.check-update.outputs.needs_update == 'true'
        run: |
          # Validate Ruby syntax
          ruby -c Formula/sourcegit-develop.rb

          # Test formula loading
          brew ruby -e "require './Formula/sourcegit-develop.rb'; puts 'Formula loaded successfully'"

          # Test dry run installation
          brew install --dry-run ./Formula/sourcegit-develop.rb

      - name: Create Pull Request
        if: steps.check-update.outputs.needs_update == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update SourceGit develop to commit ${{ steps.get-commit.outputs.short_commit }}"
          title: "Update SourceGit develop formula"
          body: |
            Automated update of SourceGit develop formula.

            **Changes:**
            - Updated commit hash from `${{ steps.check-update.outputs.current_commit }}` to `${{ steps.get-commit.outputs.short_commit }}`
            - Updated version to `${{ steps.get-commit.outputs.commit_date }}-${{ steps.get-commit.outputs.short_commit }}`
            - This corresponds to the latest commit in the [sourcegit-scm/sourcegit develop branch](https://github.com/sourcegit-scm/sourcegit/commit/${{ steps.get-commit.outputs.latest_commit }})

            **Testing:**
            Please test this formula update before merging:
            ```bash
            brew install --build-from-source ./Formula/sourcegit-develop.rb
            ```
          branch: update-sourcegit-develop-${{ steps.get-commit.outputs.short_commit }}
          delete-branch: true
